/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

*:where(:not(iframe, canvas, img, svg, video, mark, sup, strong, em, s, abbr, ul, ol, dl):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

details {
  padding: 1rem 2rem;
  list-style-type: none;
  background: rgb(182 79 68/.1);
  border-radius: .4rem;
}

details + details {
  margin-block-start: 1rem;
}

summary{
  cursor: pointer;
}

[open] summary {
  margin-block-end: 1rem;
}

summary::before {
  content: '≡';
  margin-inline-end: 2rem;
}

/* For images to not be able to exceed their container */
img {
  max-width: 100%;
  height: auto;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/**
Site Styles begin here
**/
html {
  width: 100%;
  font-size: 62.5%;
}
body {
  margin: 0;
  font-family: system-ui, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  font-size: 1.8rem;
  font-weight: 400;
  line-height: 1.5;
}
:root {
  --site-width: 800px;
  --container: min(90%, var(--site-width));
  --light-text-color: #222;
  --light-bg-color: #fff;
  --light-link-color: #b64f44;
  --light-active-link-color: #b70303;
  --dark-text-color: #eee;
  --dark-bg-color: #222;
  --dark-link-color: #ff877a;
  --dark-active-link-color: #ff5050;
  --text-color: var(--light-text-color);
  --bg-color: var(--light-bg-color);
  --link-color: var(--light-link-color);
  --active-link-color: var(--light-active-link-color);
}
.theme-active{
  --text-color: var(--dark-text-color);
  --bg-color: var(--dark-bg-color);
  --link-color: var(--dark-link-color);
  --active-link-color: var(--dark-active-link-color);
}
@media (prefers-color-scheme: dark) {
  :root{
    --text-color: var(--dark-text-color);
    --bg-color: var(--dark-bg-color);
    --link-color: var(--dark-link-color);
    --active-link-color: var(--dark-active-link-color);
  }
  .theme-active{
    --text-color: var(--light-text-color);
    --bg-color: var(--light-bg-color);
    --link-color: var(--light-link-color);
    --active-link-color: var(--light-active-link-color);
  }
}
a {
  text-decoration: none;
  color: inherit;
  cursor: pointer;
}
input {
  font-family: inherit;
}
blockquote {
  position: relative;
  margin: 2rem 1rem;
  padding: 2rem 4rem;
  background: rgb(var(--bg-color)/.05);
  border-left: solid thick #444;
  font-weight: 300;
}
blockquote::before {
  content: '“';
  position: absolute;
  top: -2rem;
  left: 1rem;
  font-size: 8rem;
  color: var(--text-color);
}
cite {
  display: block;
}
ul, ol {
  display: grid;
  gap: 1.5rem;
}
cite::before {
  content: '— ';
}
hr {
  margin: 4rem auto;
  padding: 0;
  border: 0;
  color: currentColor;
  text-align: center;
  overflow: inherit;
}
hr::after {
  content: '✯ ✯ ✯';
  display: inline-block;
  position: relative;
  top: 0;
  font-size: 2rem;
}
h1,h2,h3,h4,h5,h6 {
  line-height: 1.3;
}
h1 {
  font-weight: 700;
  margin: 1.5rem 0 2.5rem;
}
h2,h3,h4,h5,h6 {
  font-weight: 500;
}

/* Article */
article p + p {
  margin: 3rem 0 0
}
article :where(h2,h3,h4,h5,h6) {
  margin: 4rem 0 1rem;
}
article h2 {
  font-size: 2.6rem;
}
@media (min-width: 640px) {
  article h2 {
    font-size: 3.6rem;
  }
}
article h3 {
  font-size: 2.4rem;
}
@media (min-width: 640px) {
  article h3 {
    font-size: 3rem;
  }
}
article h4 {
  font-size: 2.2rem;
}
@media (min-width: 640px) {
  article h4 {
    font-size: 2.4rem;
  }
}
article h5 {
  font-size: 2rem;
}
article h6 {
  font-size: 1.8rem;
}
article :where(pre, pre[class*='language-']) {
  margin: 4rem 0;
}
article a {
  color: var(--link-color);
}
article a:where(:hover, :focus) {
  color: var(--active-link-color);
}
article math {
  display: block;
  width: fit-content;
  margin: 2rem auto;
}
article figure {
  display: -ms-grid;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
  margin: 2rem auto;
  padding: 1rem;
  background: rgb(100 100 100/.06);
  text-align: center;
}
article figure img {
  display: block;
  width: 100%;
}
article > picture, article > img {
  display: block;
  margin: 2rem auto;
}
article > picture img{
  width: 100%;
}
article figcaption {
  padding-block-start: 1rem;
  grid-row-start: 2;
  font-size: 1.6rem;
  opacity: .6;
}
article :where(iframe, video){
  aspect-ratio: 16/9;
  width: 100%;
  height: auto;
  border-radius: .5rem;
}
article .footnotes-list{
  display: grid;
  font-size: 1.4rem;
  gap: 2rem;
}

/*-- Scroll Progress --*/
.scroll-progress {
  --scale: 0;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1100;
  width: 100%;
  height: .5rem;
  background: var(--text-color);
  box-shadow: 0 0 .4rem rgb(0 3px 4px/.05);
  transform: scaleX(var(--scale));
  transform-origin: left;
  transition: transform .2s linear;
  will-change: transform;
}

/*-- Anchors --*/
.anchor-lines, .with-anchor-lines a{
  padding: .4rem 0 .4rem;
  background-image: linear-gradient(to bottom, transparent 20%, currentColor 21%);
  background-size: 0 .3rem;
  background-position: 0 100%;
  background-repeat: no-repeat;
  transition: background-size .3s cubic-bezier(.5,0,.5,1) .05s;
}
.anchor-lines:where(:hover, :focus), .with-anchor-lines a:where(:hover, :focus) {
  background-size: 100% .3rem;
}
.anchor-brackets::before, .anchor-brackets::after {
  display: inline-block;
  opacity: 0;
  transition: transform .3s, opacity .2s;
}
.anchor-brackets::before {
  content: '[';
  margin-right: 1rem;
  transform: translate(2rem);
}
.anchor-brackets::after {
  content: ']';
  margin-left: 1rem;
  transform: translate(-2rem);
}
.anchor-brackets:where(:hover,:focus)::before, .anchor-brackets:where(:hover,:focus)::after {
  opacity: 1;
  transform: translate(0);
}
.anchor-dash::before {
  content: '';
  position: relative;
  top: -.5ch;
  display: inline-block;
  opacity: .4;
  width: 4rem;
  border-bottom: solid thin currentColor;
  transform: scaleX(.7);
  transform-origin: left;
  transition: opacity .2s cubic-bezier(.5,0,.5,1) .05s, transform .3s cubic-bezier(.5,0,.5,1) .05s;
}
.anchor-dash span {
  display: inline-block;
  margin-left: .5rem;
  transition: transform .3s cubic-bezier(.5,0,.5,1) .1s;
}
.anchor-dash:where(:hover, :focus) span {
  transform: translateX(1rem);
}
.anchor-dash:where(:hover, :focus)::before {
  opacity: 1;
  transform: scaleX(1);
}
